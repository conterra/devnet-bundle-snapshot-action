name: devnet-bundle-snapshot

inputs:
  NEXUS_ID:
    description: "Nexus ID"
    required: true
  NEXUS_USER:
    description: "Nexus User"
    required: true
  NEXUS_USER_PW:
    description: "Nexus User Password"
    required: true
  NEXUS_URL_RELEASE:
    description: "Nexus Url Release"
    required: true
  NEXUS_URL_SNAPSHOTS:
    description: "Nexus Url Snapshots"
    required: true
  RELEASE_TOKEN:
    description: "Release Token"
    required: true

runs:
  using: "composite"
  steps:
    - id: checkout
      uses: actions/checkout@v2
    - id: cache-node
      name: Cache node modules
      uses: actions/cache@v2
      with:
        path: |
          '**/node'
          '**/node_modules'
          ~/.m2/repository
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}
    - id: setup
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - id: create_settings_xml
      name: Create settings.xml
      uses: whelk-io/maven-settings-xml-action@v18
      with:
        repositories: >
          [
            {
              "id": "central",
              "url": "http://central",
              "releases": {
                "enabled": "true"
              },
              "snapshots": {
                "enabled": "true"
              }
            }
          ]
        plugin_repositories: >
          [
            {
              "id": "central",
              "url": "http://central",
              "releases": {
                "enabled": "true"
              },
              "snapshots": {
                "enabled": "true"
              }
            }
          ]
        servers: >
          [
            {
              "id": "${{ NEXUS_ID }}",
              "username": "${{ NEXUS_USER }}",
              "password": "${{ NEXUS_USER_PW }}"
            }
          ]
        mirrors: >
          [
            {
              "id": "${{ NEXUS_ID }}",
              "mirrorOf": "central",
              "url": "${{ NEXUS_URL }}"
            }
          ]
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: |
          ~/.node
          ~/.node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - id: project_version
      name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
    - id: project_artifact_id
      name: Extract Maven project artifactId
      run: echo ::set-output name=artifactId::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec)
    - id: tests
      name: Run tests
      run: mvn prepare-package -Prun-js-tests,include-mapapps-deps
    - id: nexus_deployment
      name: Publish to Nexus
      run: mvn deploy -Pcompress -Dmaven.test.skip.exec=true -Ddist.releases.id=${{ NEXUS_ID }} -Ddist.releases.url=${{ NEXUS_URL_RELEASE }} -Ddist.snapshots.id=${{ NEXUS_ID }} -Ddist.snapshots.url=${{ NEXUS_URL_SNAPSHOTS }}
    - id: release
      name: Create GitHub release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "target/${{ steps.project_artifact_id.outputs.artifactId }}-bundle.zip,target/${{ steps.project_artifact_id.outputs.artifactId }}-sample-app.zip"
        preRelease: true
        bodyFile: "RELEASE.md"
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ steps.project_version.outputs.version }}
        token: ${{ secrets.RELEASE_TOKEN }}
